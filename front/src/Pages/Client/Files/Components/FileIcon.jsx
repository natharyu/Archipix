import AudioFileIcon from "@mui/icons-material/AudioFile";
import DescriptionIcon from "@mui/icons-material/Description";
import ImageIcon from "@mui/icons-material/Image";
import InsertDriveFileIcon from "@mui/icons-material/InsertDriveFile";
import VideoFileIcon from "@mui/icons-material/VideoFile";
import { useEffect, useState } from "react";
function FileIcon({ ext }) {
  const imageExt = [
    "ase",
    "art",
    "bmp",
    "blp",
    "cd5",
    "cit",
    "cpt",
    "cr2",
    "cut",
    "dds",
    "dib",
    "djvu",
    "egt",
    "exif",
    "gif",
    "gpl",
    "grf",
    "icns",
    "ico",
    "iff",
    "jng",
    "jpeg",
    "jpg",
    "jfif",
    "jp2",
    "jps",
    "lbm",
    "max",
    "miff",
    "mng",
    "msp",
    "nef",
    "nitf",
    "ota",
    "pbm",
    "pc1",
    "pc2",
    "pc3",
    "pcf",
    "pcx",
    "pdn",
    "pgm",
    "PI1",
    "PI2",
    "PI3",
    "pict",
    "pct",
    "pnm",
    "pns",
    "ppm",
    "psb",
    "psd",
    "pdd",
    "psp",
    "px",
    "pxm",
    "pxr",
    "qfx",
    "raw",
    "rle",
    "sct",
    "sgi",
    "rgb",
    "int",
    "bw",
    "tga",
    "tiff",
    "tif",
    "vtf",
    "xbm",
    "xcf",
    "xpm",
    "3dv",
    "amf",
    "ai",
    "awg",
    "cgm",
    "cdr",
    "cmx",
    "dxf",
    "e2d",
    "egt",
    "eps",
    "fs",
    "gbr",
    "odg",
    "svg",
    "stl",
    "vrml",
    "x3d",
    "sxd",
    "v2d",
    "vnd",
    "wmf",
    "emf",
    "art",
    "xar",
    "png",
    "webp",
    "jxr",
    "hdp",
    "wdp",
    "cur",
    "ecw",
    "iff",
    "lbm",
    "liff",
    "nrrd",
    "pam",
    "pcx",
    "pgf",
    "sgi",
    "rgb",
    "rgba",
    "bw",
    "int",
    "inta",
    "sid",
    "ras",
    "sun",
    "tga",
    "heic",
    "heif",
  ];
  const videoExt = [
    "3g2",
    "3gp",
    "aaf",
    "asf",
    "avchd",
    "avi",
    "drc",
    "flv",
    "m2v",
    "m3u8",
    "m4p",
    "m4v",
    "mkv",
    "mng",
    "mov",
    "mp2",
    "mp4",
    "mpe",
    "mpeg",
    "mpg",
    "mpv",
    "mxf",
    "nsv",
    "ogg",
    "ogv",
    "qt",
    "rm",
    "rmvb",
    "roq",
    "svi",
    "vob",
    "webm",
    "wmv",
    "yuv",
  ];
  const audioExt = [
    "mp3",
    "wav",
    "m4a",
    "flac",
    "wma",
    "ape",
    "aa",
    "aac",
    "aax",
    "act",
    "aiff",
    "alac",
    "amr",
    "ape",
    "au",
    "awb",
    "dss",
  ];
  const textExt = [
    "ada",
    "adb",
    "ads",
    "applescript",
    "as",
    "asc",
    "ascii",
    "ascx",
    "asm",
    "asmx",
    "asp",
    "aspx",
    "atom",
    "au3",
    "awk",
    "bas",
    "bash",
    "bashrc",
    "bat",
    "bbcolors",
    "bcp",
    "bdsgroup",
    "bdsproj",
    "bib",
    "bowerrc",
    "c",
    "cbl",
    "cc",
    "cfc",
    "cfg",
    "cfm",
    "cfml",
    "cgi",
    "cjs",
    "clj",
    "cljs",
    "cls",
    "cmake",
    "cmd",
    "cnf",
    "cob",
    "code-snippets",
    "coffee",
    "coffeekup",
    "conf",
    "cp",
    "cpp",
    "cpt",
    "cpy",
    "crt",
    "cs",
    "csh",
    "cson",
    "csproj",
    "csr",
    "css",
    "csslintrc",
    "csv",
    "ctl",
    "curlrc",
    "cxx",
    "d",
    "dart",
    "dfm",
    "diff",
    "dof",
    "dpk",
    "dpr",
    "dproj",
    "dtd",
    "eco",
    "editorconfig",
    "ejs",
    "el",
    "elm",
    "emacs",
    "eml",
    "ent",
    "erb",
    "erl",
    "eslintignore",
    "eslintrc",
    "ex",
    "exs",
    "f",
    "f03",
    "f77",
    "f90",
    "f95",
    "fish",
    "for",
    "fpp",
    "frm",
    "fs",
    "fsproj",
    "fsx",
    "ftn",
    "gemrc",
    "gemspec",
    "gitattributes",
    "gitconfig",
    "gitignore",
    "gitkeep",
    "gitmodules",
    "go",
    "gpp",
    "gradle",
    "graphql",
    "groovy",
    "groupproj",
    "grunit",
    "gtmpl",
    "gvimrc",
    "h",
    "haml",
    "hbs",
    "hgignore",
    "hh",
    "hpp",
    "hrl",
    "hs",
    "hta",
    "htaccess",
    "htc",
    "htm",
    "html",
    "htpasswd",
    "hxx",
    "iced",
    "iml",
    "inc",
    "inf",
    "info",
    "ini",
    "ino",
    "int",
    "irbrc",
    "itcl",
    "itermcolors",
    "itk",
    "jade",
    "java",
    "jhtm",
    "jhtml",
    "js",
    "jscsrc",
    "jshintignore",
    "jshintrc",
    "json",
    "json5",
    "jsonld",
    "jsp",
    "jspx",
    "jsx",
    "ksh",
    "less",
    "lhs",
    "lisp",
    "log",
    "ls",
    "lsp",
    "lua",
    "m",
    "m4",
    "mak",
    "map",
    "markdown",
    "master",
    "md",
    "mdown",
    "mdwn",
    "mdx",
    "metadata",
    "mht",
    "mhtml",
    "mjs",
    "mk",
    "mkd",
    "mkdn",
    "mkdown",
    "ml",
    "mli",
    "mm",
    "mxml",
    "nfm",
    "nfo",
    "noon",
    "npmignore",
    "npmrc",
    "nuspec",
    "nvmrc",
    "ops",
    "pas",
    "pasm",
    "patch",
    "pbxproj",
    "pch",
    "pem",
    "pg",
    "php",
    "php3",
    "php4",
    "php5",
    "phpt",
    "phtml",
    "pir",
    "pl",
    "pm",
    "pmc",
    "pod",
    "pot",
    "prettierrc",
    "properties",
    "props",
    "pt",
    "pug",
    "purs",
    "py",
    "pyx",
    "r",
    "rake",
    "rb",
    "rbw",
    "rc",
    "rdoc",
    "rdoc_options",
    "resx",
    "rexx",
    "rhtml",
    "rjs",
    "rlib",
    "ron",
    "rs",
    "rss",
    "rst",
    "rtf",
    "rvmrc",
    "rxml",
    "s",
    "sass",
    "scala",
    "scm",
    "scss",
    "seestyle",
    "sh",
    "shtml",
    "sln",
    "sls",
    "spec",
    "sql",
    "sqlite",
    "sqlproj",
    "srt",
    "ss",
    "sss",
    "st",
    "strings",
    "sty",
    "styl",
    "stylus",
    "sub",
    "sublime-build",
    "sublime-commands",
    "sublime-completions",
    "sublime-keymap",
    "sublime-macro",
    "sublime-menu",
    "sublime-project",
    "sublime-settings",
    "sublime-workspace",
    "sv",
    "svc",
    "svg",
    "swift",
    "t",
    "tcl",
    "tcsh",
    "terminal",
    "tex",
    "text",
    "textile",
    "tg",
    "tk",
    "tmLanguage",
    "tmpl",
    "tmTheme",
    "tpl",
    "ts",
    "tsv",
    "tsx",
    "tt",
    "tt2",
    "ttml",
    "twig",
    "txt",
    "v",
    "vb",
    "vbproj",
    "vbs",
    "vcproj",
    "vcxproj",
    "vh",
    "vhd",
    "vhdl",
    "vim",
    "viminfo",
    "vimrc",
    "vm",
    "vue",
    "webapp",
    "webmanifest",
    "wsc",
    "x-php",
    "xaml",
    "xht",
    "xhtml",
    "xml",
    "xs",
    "xsd",
    "xsl",
    "xslt",
    "y",
    "yaml",
    "yml",
    "zsh",
    "zshrc",
  ];
  const [icon, setIcon] = useState("");
  const getIcon = (ext) => {
    if (ext) {
      const extLower = ext.toLowerCase();
      if (imageExt.includes(extLower)) {
        return setIcon("image");
      }
      if (videoExt.includes(extLower)) {
        return setIcon("video");
      }
      if (audioExt.includes(extLower)) {
        return setIcon("audio");
      }
      if (textExt.includes(extLower)) {
        return setIcon("text");
      }
      return setIcon("other");
    }
  };

  useEffect(() => {
    getIcon(ext);
  }, []);

  return (
    <>
      {(() => {
        switch (icon) {
          case "image":
            return <ImageIcon className="icon" />;
          case "video":
            return <VideoFileIcon className="icon" />;
          case "audio":
            return <AudioFileIcon className="icon" />;
          case "text":
            return <DescriptionIcon className="icon" />;
          default:
            return <InsertDriveFileIcon className="icon" />;
        }
      })()}
    </>
  );
}

export default FileIcon;
